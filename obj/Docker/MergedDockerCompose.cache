name: dockercompose3267967081969524503
services:
  adminer:
    image: adminer
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    restart: always
  db:
    command:
    - --default-authentication-plugin=mysql_native_password
    environment:
      ACCEPT_EULA: "Y"
      MYSQL_DATABASE: vshopdb
      MYSQL_ROOT_PASSWORD: root
    image: mysql
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "3306"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: C:\meus projetos\controle de Clientes Inadimplentes\setup.sql
      target: /docker-entrypoint-initdb.d/setup.sql
      bind:
        create_host_path: true
    - type: volume
      source: db_data
      target: /var/lib/mysql
      volume: {}
  gerenciadorclientes.web:
    build:
      context: C:\meus projetos\controle de Clientes Inadimplentes
      dockerfile: VShopWeb/Dockerfile
    depends_on:
      vapp.clientesapi:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80;http://+:8000
    image: gerenciadorclientesweb
    networks:
      marvel-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "2618"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Giovani\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Giovani\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  vapp.clientesapi:
    build:
      context: C:\meus projetos\controle de Clientes Inadimplentes
      dockerfile: VShop.ProductApi/Dockerfile
    depends_on:
      db:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: vappclientesapi
    networks:
      marvel-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "2533"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Giovani\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Giovani\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose3267967081969524503_default
  marvel-network:
    name: dockercompose3267967081969524503_marvel-network
    driver: bridge
volumes:
  db_data:
    name: dockercompose3267967081969524503_db_data